{"version":3,"sources":["components/Header/Header.js","components/Modal/Modal.js","redux/actions/actionConstants.js","redux/reducers/entries.js","redux/reducers/index.js","redux/store.js","redux/actions/actionCreators.js","components/Modal/EntryEditor.js","components/Calendar/DayContainer.js","components/Calendar/MonthContainer.js","components/Calendar/CalendarView.js","components/Footer/Footer.js","components/Header/HowTo.js","components/EntryPoint.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","id","modalRoot","document","getElementById","Modal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","el","appendChild","removeChild","createPortal","children","React","Component","TEST","entries","arguments","length","undefined","action","console","log","type","concat","toConsumableArray","modal_data","rootReducer","combineReducers","store","createStore","getState","test","EntryEditor","state","title","start_date","date","end_date","checked","toggleCheck","bind","assertThisInitialized","handleExit","handleAdd","setState","onCloseRequest","dispatch","_this2","className","Input","placeholder","value","onChange","e","target","TextField","label","defaultValue","InputLabelProps","shrink","Checkbox","Fab","aria-label","onClick","Delete_default","Add_default","DayContainer","showModal","handleClick","handleModalExit","day_number","render","querySelector","classList","add","forceUpdate","month","month_number","day","year","active_cell","entry","components_Modal_Modal","Modal_EntryEditor","MonthContainer","entry_data","day_numbers","first_day","Date","getDay","max_day","getDate","day_array","iterator","push","i","empty_buffer","generateDayNumbers","map","index","Calendar_DayContainer","key","day_names_array","day_name","slice","months","monthly_entry_data","CalendarView","month_num","Number","split","day_num","objectSpread2","defineProperty","moment","process_entries","month_container_array","month_title","Calendar_MonthContainer","Footer","HowTo","EntryPoint","Header_Header","Header_HowTo","Calendar_CalendarView","Footer_Footer","ReduxBoundEntryPoint","connect","bindActionCreators","actionCreators","App","es","components_EntryPoint","Boolean","window","location","hostname","match","ReactDOM","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6657833d.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css';\n\nfunction Header () {\n  return (\n    <div id='header-container'>\n      <div id='header-text-container'>\n        <div id='header-title'>\n          Your Year Visualized\n        </div>\n        <div id='header-subtext'>\n          For the people who want an effortless way to track important events\n          <p>Click on any valid date to store a note! </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport './modal.css';\n\nconst modalRoot = document.getElementById('modal-root');\n\nclass Modal extends React.Component {\n  constructor (props) {\n    super(props);\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount () {\n    // The portal element is inserted in the DOM tree after\n    // the Modal's children are mounted, meaning that children\n    // will be mounted on a detached DOM node. If a child\n    // component requires to be attached to the DOM tree\n    // immediately when mounted, for example to measure a\n    // DOM node, or uses 'autoFocus' in a descendant, add\n    // state to Modal and only render the children when Modal\n    // is inserted in the DOM tree.\n    modalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount () {\n    modalRoot.removeChild(this.el);\n  }\n\n  render () {\n    return createPortal(\n      this.props.children,\n      this.el\n    );\n  }\n}\n\nexport default Modal;\n","/* action types */\nexport const TEST = 'TEST';\n","import { TEST } from '../actions/actionConstants';\n\nfunction entries (entries = [], action) {\n  console.log('data passed to reducer', action);\n  switch (action.type) {\n    case TEST:\n      return [...entries, action.modal_data];\n    default:\n      return entries;\n  }\n}\n\nexport default entries;\n","import { combineReducers } from 'redux';\nimport entries from './entries';\n\nconst rootReducer = combineReducers({ entries });\n\nexport default rootReducer;\n\n// plans for christmas week: understand the user account registration and router, and use those to build the frame of the app\n// add the calendar component to actually flesh it out afterward!\n","import { createStore } from 'redux';\nimport entries from './reducers/index';\n\nconst default_state = {\n};\n\nconst store = createStore(entries, default_state);\nconsole.log(store.getState());\nexport default store;\n","import { TEST } from './actionConstants';\n\nexport function test (modal_data) {\n  return {\n    type: TEST,\n    modal_data\n  };\n}\n","import React from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport store from '../../redux/store';\nimport { test } from '../../redux/actions/actionCreators';\n\nclass EntryEditor extends React.Component {\n  // this will take options of types, and render contents based on this (react-router)\n\n  constructor (props) {\n    super(props);\n    this.state = {\n      title: '',\n      start_date: this.props.date,\n      end_date: this.props.date,\n      checked: true\n    };\n    this.toggleCheck = this.toggleCheck.bind(this);\n    this.handleExit = this.handleExit.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n  }\n\n  toggleCheck () {\n    this.setState({\n      checked: !this.state.checked\n    });\n  }\n\n  handleExit () {\n    console.log('closing');\n    this.props.onCloseRequest();\n  }\n\n  handleAdd () {\n    store.dispatch(test(this.state));\n    console.log('store:', store.getState());\n    this.handleExit();\n  }\n\n  render () {\n    return (\n      <div className='surface'>\n        <div className='animated zoomIn faster box'>\n          <div id='modal-title'>\n            {this.props.title}\n          </div>\n          <div className='inputs'>\n            <Input\n              placeholder='entry title'\n              className='entry-title'\n              value={this.state.title}\n              onChange={e => this.setState({ title: e.target.value })}\n            />\n            <TextField\n              className='start-date'\n              label='start date'\n              type='date'\n              defaultValue={this.props.date}\n              InputLabelProps={{\n                shrink: true\n              }}\n              value={this.state.start_date}\n              onChange={e => this.setState({ start_date: e.target.value })}\n            />\n            <TextField\n              className='end-date'\n              label='end date'\n              type='date'\n              defaultValue={this.props.date}\n              value={this.state.end_date}\n              onChange={e => this.setState({ end_date: e.target.value })}\n              InputLabelProps={{\n                shrink: true\n              }}\n            />\n            <div className='check-box'>\n              subtract from total vacation days:\n              <Checkbox\n                checked={this.state.checked}\n                onChange={this.toggleCheck}\n              />\n            </div>\n          </div>\n\n          <div className='buttons'>\n            <Fab aria-label='Delete' onClick={this.handleExit}>\n              <DeleteIcon id='fab' />\n            </Fab>\n            <Fab aria-label='Add' onClick={this.handleAdd}>\n              <AddIcon id='fab' />\n            </Fab>\n          </div>\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default EntryEditor;\n","import React from 'react';\nimport Modal from '../Modal/Modal';\nimport EntryEditor from '../Modal/EntryEditor';\n\nclass DayContainer extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      showModal: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleModalExit = this.handleModalExit.bind(this);\n  }\n\n  handleClick () {\n    if (this.props.day_number) {\n      this.setState({\n        showModal: true,\n        render: this.props.day_number\n      });\n    }\n    console.log(this.state);\n  }\n\n  async handleModalExit () {\n    const element = document.querySelector('.surface');\n    element.classList.add('animated', 'bounceOutLeft');\n    await this.forceUpdate();\n    this.setState({ showModal: false });\n  }\n\n  render () {\n    var month = this.props.month_number + 1;\n    if (month < 10) {\n      month = '0' + month;\n    }\n    var day = this.props.day_number;\n    if (day < 10) {\n      day = '0' + day;\n    }\n    const date = this.props.year + '-' + month + '-' + day;\n\n    var active_cell = '';\n    if (this.props.day_number) {\n      active_cell = 'active';\n    }\n\n    return (\n      <div className={'day-container ' + active_cell} onClick={this.handleClick}>\n        <div className='day-number'>\n          {this.props.day_number}\n\n          {this.props.entry && <div className='entry'>\n            {this.props.entry}\n                               </div>}\n\n          {this.state.showModal && <Modal>\n            <EntryEditor date={date} title='Add a New Entry' onCloseRequest={this.handleModalExit} />\n                                   </Modal>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DayContainer;\n","import React from 'react';\nimport DayContainer from './DayContainer';\n\nfunction generateDayNumbers (month, year) {\n  const first_day = new Date(year, month, 1).getDay(); // returns number of day\n  const max_day = new Date(year, month + 1, 0).getDate(); // return max number of days\n  const day_array = [];\n  let iterator = 0;\n  while (iterator < first_day) {\n    day_array.push('');\n    iterator++;\n  }\n  for (let i = 1; i <= max_day; i++) {\n    day_array.push(i);\n    iterator++;\n  }\n\n  const empty_buffer = 35 - iterator;\n  for (let i = 0; i <= empty_buffer; i++) {\n    day_array.push('');\n  }\n\n  return day_array;\n}\n\nclass MonthContainer extends React.Component {\n  render () {\n    console.log(this.props.month_number, ':', this.props.entry_data);\n\n    const day_numbers = generateDayNumbers(this.props.month_number, this.props.year);\n    const month_number = this.props.month_number;\n    const day_array = day_numbers.map((day_number, index) =>\n      <DayContainer\n        day_number={day_number} index={index} key={index}\n        month_number={month_number} year={this.props.year}\n        entry={this.props.entry_data[day_number]}\n      />\n    );\n    const day_names = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const day_names_array = day_names.map((day_name, index) =>\n      <div className='day-name'>{day_name}</div>);\n\n    return (\n      <div className='month-container'>\n        <div className='month-title'>\n          {this.props.month}\n        </div>\n\n        <div className='days-container'>\n          {day_names_array}\n          {day_array.slice(0, 7)}\n          {day_array.slice(7, 14)}\n          {day_array.slice(14, 21)}\n          {day_array.slice(21, 28)}\n          {day_array.slice(28, 35)}\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default MonthContainer;\n","import React from 'react';\nimport MonthContainer from './MonthContainer';\nimport './calendar.css';\nimport moment from 'moment';\n\nconst months = ['January', 'February', 'March', 'April', 'May', 'June',\n  'July', 'August', 'September', 'October', 'November', 'December'];\n\nconst monthly_entry_data = {};\n\nclass CalendarView extends React.Component {\n  process_entries () {\n    console.log('processing entries:');\n    const entries = this.props.entries;\n\n    for (var i = 0; i < 12; i++) {\n      monthly_entry_data[i] = {};\n    }\n    for (var i = 0; i < entries.length; i++) {\n      const entry = entries[i];\n      const month_num = Number(entry.start_date.split('-')[1]) - 1;\n      const day_num = Number(entry.start_date.split('-')[2]);\n\n      monthly_entry_data[month_num] = {\n        ...monthly_entry_data[month_num],\n        ...{ [day_num]: entry.title }\n      };\n    }\n  }\n\n  render () {\n    const year = moment().year();\n    this.process_entries();\n    const month_container_array = months.map((month_title, index) =>\n      <MonthContainer month={month_title} month_number={index} year={year} entry_data={monthly_entry_data[index]} />\n    );\n\n    return (\n      <div className='calendar-view'>\n        {month_container_array}\n      </div>\n    );\n  }\n}\n\n/* <Modal>\n   <ModalGeneric/>\n  </Modal> */\n\nexport default CalendarView;\n","import React from 'react';\n\nfunction Footer () {\n  return (\n    <div className='footer' />\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport './header.css';\n\nfunction HowTo () {\n  return (\n    <div className='how-to'>\n      <p>Please note, no data will persist after a page refresh.</p>\n    </div>\n  );\n}\n\nexport default HowTo;\n","import React, { Component } from 'react';\nimport Header from './Header/Header';\nimport CalendarView from './Calendar/CalendarView';\nimport Footer from './Footer/Footer';\nimport HowTo from './Header/HowTo';\n\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../redux/actions/actionCreators';\n\nclass EntryPoint extends Component {\n  render () {\n    console.log(this.props);\n    return (\n      <div className='App'>\n        <Header />\n        <HowTo />\n        <CalendarView entries={this.props.entries} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps (state) {\n  return { entries: state.entries };\n}\nfunction mapDispatchToProps (dispatch) {\n  return bindActionCreators(actionCreators, dispatch);\n}\nconst ReduxBoundEntryPoint = connect(mapStateToProps, mapDispatchToProps)(EntryPoint);\nexport default ReduxBoundEntryPoint;\n// export default App;\n","import React, { Component } from 'react';\nimport ReduxBoundEntryPoint from './components/EntryPoint';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nclass App extends Component {\n  render () {\n    return (\n      <Provider store={store}>\n        <ReduxBoundEntryPoint />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}